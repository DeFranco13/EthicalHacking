import Pentesting.Network.Scans.DeviceScan as device
import Pentesting.Network.Scans.Handshake as handshake
import Pentesting.Network.Scans.Deauth as deauth
import Pentesting.Network.Scans.Wifi as wifi
import Pentesting.Network.Scans.PhoneNumberScan as phone
import Pentesting.ModuleTools as Module
from time import sleep
from tqdm import tqdm

# ==========
#
# Device Scan
#
# ==========
def Bar_device():
    print(" ")
    with tqdm(total=100, desc=f"Loading Device Scan") as pbar:
            for i in range(100):
                pbar.update(1)
                sleep(0.1)
    print(" ")

def Start_Device():
    Module.line()
    Bar_device()
    Module.line()
    ip = input(f"\nGive valid ip: ")
    sub = int(input("Give valid range: "))
    device.StartScan(ip, sub)
    Done()

#
#
#
#
#
    
def Start_handshake():
    print("Handshake")
    sleep(3)
    #handshake.GetHandshake()

#
#
#
#
#
    
def Start_Deauth():
    print("Deauth")
    sleep(3)
    #deauth.Start()

#
#
#
#
#

def Bar_Wifi():
    print(" ")
    with tqdm(total=100, desc=f"Loading Wifi Scan") as pbar:
            for i in range(100):
                pbar.update(1)
                sleep(0.1)
    print(" ")

def Start_Wifi():
    Module.line()
    Bar_Wifi()
    Module.line()
    wifi.StartScan()
    Done()

#
#
#
#
#
    
def Start_Phone():
    print("Phone")
    sleep(3)
    pass

#
#
#
#
#

def Done():
    Module.clean()
    Module.line()
    print("""


        Scans are done all the data will be found under Network/Output!
          
          This screen will close in 15 seconds and the Framework will start again!


          """)
    Module.line()
    sleep(15)