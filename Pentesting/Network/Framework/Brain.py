import os
import json
from rich import print
from time import sleep
from tqdm import tqdm
import threading
import Network.Framework.LoadSettings as Settings
import Network.Scans.Wifi2 as Wifi
import Network.Scans.Deauth as Deauth
import Network.Scans.DeviceScan as Device
import Network.Scans.Handshake as Handshake

ip = ""

# ==========
#
# Terminal line
#
# ==========

def line():
    print(f"\n")
    print("=" * os.get_terminal_size().columns)
    print(f"\n")  

# ==========
#
# Bar methods
#
# ==========

def BarWifi():
    with tqdm(total=100, desc=f"Scanning {ip}") as pbar:
            for i in range(100):
                pbar.update(1)
                sleep(1.2)
    print(" ")

def BarDevices():
    with tqdm(total=100, desc=f"Scanning devices in {ip}") as pbar:
            for i in range(100):
                pbar.update(1)
                sleep(1.2)
    print(" ")

def BarDeauth():
    with tqdm(total=100, desc=f"Deauthing {ip}") as pbar:
            for i in range(100):
                pbar.update(1)
                sleep(1.2)
    print(" ")

def BarHandshake():
    with tqdm(total=100, desc=f"Capturing Handshake of {ip}") as pbar:
            for i in range(100):
                pbar.update(1)
                sleep(1.2)
    print(" ")

# ==========
#
# Scanning methods
#
# ==========

def WifiScan():
    Wifi.StartScan()

def DeviceScan():
    Device.StartScan(ip)

def DeauthAttack():
    Deauth.Start(ip)

def HandshakeAttack():
     Handshake.Start()

def StartScans():
    if Settings.previousState == True:
        os.system("rm Network/Output/*")

    if Settings.wifiState == True:
        thread1 = threading.Thread(target=WifiScan)
        thread2 = threading.Thread(target=BarWifi)
        thread1.start()
        thread2.start()
        thread1.join()
        thread2.join()

    if Settings.deviceState == True:
        thread3 = threading.Thread(target=DeviceScan)
        thread4 = threading.Thread(target=BarDevices)
        thread3.start()
        thread4.start()
        thread3.join()
        thread4.join()
    
    if Settings.deauthState == True:
        thread5 = threading.Thread(target=DeauthAttack)
        thread6 = threading.Thread(target=BarDeauth)
        thread5.start()
        thread6.start()
        thread5.join()
        thread6.join()
    
    if Settings.handshakeState == True:
        thread7 = threading.Thread(target=HandshakeAttack)
        thread8 = threading.Thread(target=BarHandshake)
        thread7.start()
        thread8.start()
        thread7.join()
        thread8.join()