import os
import json
from rich import print
from time import sleep
from tqdm import tqdm
import threading
import WebScan.Scans.Scan4data as ScanData
import WebScan.Framework.LoadSettings as Settings
import WebScan.Scans.ScanSSL as SSLScan
import WebScan.Scans.Scan4services as Service
import WebScan.Scans.Scan4pages as Pages


website = ""
# ==========
#
# Terminal line method
#
# ==========
def line():
    print(f"\n")
    print("=" * os.get_terminal_size().columns)
    print(f"\n")   
# ==========
#
# Bar methods
#
# ==========
def BarData():
    with tqdm(total=100, desc=f"Scanning {website}") as pbar:
            for i in range(100):
                pbar.update(1)
                sleep(1.2)
    print(" ")
def BarCertificate():
    with tqdm(total=100, desc=f"Scanning Certificate") as pbar:
            for i in range(100):
                pbar.update(1)
                sleep(0.6)
    print(" ")
def BarService():
    with tqdm(total=100, desc=f"Scanning Services") as pbar:
            for i in range(100):
                pbar.update(1)
                sleep(0.3)
    print(" ")
def BarDirbuster():
    with tqdm(total=100, desc=f"Scanning Directory") as pbar:
            for i in range(100):
                pbar.update(1)
                sleep(0.3)
    print(" ") 
def BarRobot():
    with tqdm(total=100, desc=f"Scanning Directory") as pbar:
            for i in range(100):
                pbar.update(1)
                sleep(0.3)
    print(" ")   
# ==========
#
# Call to scanning methods 
#
# ==========
def DataScan():
    ScanData.Start(website)
    data = ScanData.getData()
    with open(scandata_json, "w") as jdata:
        json.dump(data , jdata, indent=2)
def CertifificateScan():
    SSLScan.job(website)
def ServiceScan():
    serviceData = Service.Start(website)
    with open(servicedata_json, "w") as jdata:
        json.dump(serviceData , jdata, indent=2)
def DirbusterScan():
     dirbusterData = Pages.DirbusterScan(website)
     with open(dirbusterdata_json, "w") as ddata:
          ddata.write(dirbusterData)
def RobotScan():
     robotData = Pages.GetRobot(website)
     with open(robotdata_txt, "w") as rdata:
          for line in robotData:
               rdata.write(line)
# ==========
#
# Callable method for parent to start scanning
#
# ==========
def StartScans():
    if Settings.previousDataState == True:
         os.system("rm WebScan/Input/outputXML.xml")
         os.system("rm WebScan/Output/*")
    if Settings.scanState == True:
        os.system(f"touch WebScan/Output/{website}_FoundData.txt")
        global scandata_json
        scandata_json = f"WebScan/Output/{website}_FoundData.txt"

        thread1 = threading.Thread(target=DataScan)
        thread2 = threading.Thread(target=BarData)
        thread1.start()
        thread2.start()
        thread1.join()
        thread2.join()
    if Settings.certificateState == True:
        thread3 = threading.Thread(target=CertifificateScan)
        thread4 = threading.Thread(target=BarCertificate)
        thread3.start()
        thread4.start()
        thread3.join()
        thread4.join()
    if Settings.serviceState == True:
        os.system(f"touch WebScan/Output/{website}_ServicesData.json")
        global servicedata_json
        servicedata_json = f"WebScan/Output/{website}_ServicesData.json"

        thread5 = threading.Thread(target=ServiceScan)
        thread6 = threading.Thread(target=BarService)
        thread5.start()
        thread6.start()
        thread5.join()
        thread6.join()
    if Settings.dirbusterState == True:
        os.system(f"touch WebScan/Output/{website}_DirbusterData.txt")
        global dirbusterdata_json
        dirbusterdata_json = f"WebScan/Output/{website}_DribusterData.json"

        thread7 = threading.Thread(target=DirbusterScan)
        thread8 = threading.Thread(target=BarDirbuster)
        thread7.start()
        thread8.start()
        thread7.join()
        thread8.join()
    if Settings.robotState == True:
        os.system(f"touch WebScan/Output/{website}_RobotData.txt")
        global robotdata_txt
        robotdata_txt = f"WebScan/Output/{website}_RobotData.txt"

        thread9 = threading.Thread(target=RobotScan)
        thread10 = threading.Thread(target=BarRobot)
        thread9.start()
        thread10.start()
        thread9.join()
        thread10.join()

        
    line()
    print("Scans done!")
    print("Output of scans are found in Output folder!")
    line()
    

if __name__ == "__main__":
    StartScans()
    
