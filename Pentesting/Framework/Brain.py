import os
import json
from rich import print
from time import sleep
from tqdm import tqdm
import threading
import Scans.Scan4data as ScanData
import Framework.LoadSettings as Settings
import Scans.ScanSSL as SSLScan
import Scans.Scan4services as Service

website = ""
data_json_data = "Output/FoundData.json"
service_json_data = "Output/FoundServices.json"

# ==========
#
# Terminal line method
#
# ==========

def line():
    print(f"\n")
    print("=" * os.get_terminal_size().columns)
    print(f"\n")   

# ==========
#
# Bar methods
#
# ==========


def BarData():
    with tqdm(total=100, desc=f"Scanning {website}") as pbar:
            for i in range(100):
                pbar.update(1)
                sleep(2)
    print(" ")

def BarCertificate():
    with tqdm(total=100, desc=f"Scanning Certificate") as pbar:
            for i in range(100):
                pbar.update(1)
                sleep(0.6)
    print(" ")

def BarService():
    with tqdm(total=100, desc=f"Scanning Services") as pbar:
            for i in range(100):
                pbar.update(1)
                sleep(0.3)
    print(" ")


# ==========
#
# Call to scanning methods 
#
# ==========


def DataScan():
    ScanData.Start(website)
    data = ScanData.getData()
    with open(data_json_data, "w") as jdata:
        json.dump(data , jdata, indent=2)

def CertifificateScan():
    SSLScan.job(website)

def ServiceScan():
    serviceData = Service.Start(website)
    with open(service_json_data, "w") as jdata:
        json.dump(serviceData , jdata, indent=2)


# ==========
#
# Callable method for parent to start scanning
#
# ==========

def StartScans():
    print("Scan will start!")
    if Settings.previousDataState == True:
         os.system("rm Input/outputXML.xml")
         os.system("rm Output/*")
         os.system("touch Output/FoundData.json")
         os.system("touch Output/FoundServices.json")

    if Settings.scanState == True:
        thread1 = threading.Thread(target=DataScan)
        thread2 = threading.Thread(target=BarData)
        thread1.start()
        thread2.start()
        thread1.join()
        thread2.join()
    
    if Settings.certificateState == True:
        thread3 = threading.Thread(target=CertifificateScan)
        thread4 = threading.Thread(target=BarCertificate)
        thread3.start()
        thread4.start()
        thread3.join()
        thread4.join()
    
    if Settings.serviceState == True:
        thread5 = threading.Thread(target=ServiceScan)
        thread6 = threading.Thread(target=BarService)
        thread5.start()
        thread6.start()
        thread5.join()
        thread6.join()

        
    line()
    print("Scans done!")
    print("Output of scans are found in Output folder!")
    line()
    

if __name__ == "__main__":
    StartScans()
    
